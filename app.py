import gradio as gr
import joblib
from sklearn.feature_extraction.text import TfidfVectorizer

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞
model = joblib.load("logistic_model.pkl")
vectorizer = joblib.load("tfidf_vectorizer.pkl")

# –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
def clean_text(text):
    return text.lower()

# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
def predict_sentiment(text):
    cleaned = clean_text(text)
    vector = vectorizer.transform([cleaned])
    prediction = model.predict(vector)[0]
    return "üòä Positive" if prediction == 1 else "üò† Negative"

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Gradio
iface = gr.Interface(
    fn=predict_sentiment,
    inputs="text",
    outputs="text",
    title="Amazon Sentiment Classifier",
    description="Enter an Amazon product review to detect its sentiment",
    theme="soft",
)

# –ó–∞–ø—É—Å–∫ —Å –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
iface.launch(share=True)
